import React, { useEffect, useState } from "react";
import second from "../../assets/bgImages/bgLogin.png";
import { useForm } from "react-hook-form";
import { useNavigate } from "react-router-dom";

import Cookies from 'universal-cookie';

import API from "../../utils/api";

const Login = () => {
  let navigate = useNavigate();
  const [showPassword, setShowPassword] = useState(false);
  const [remember, setRemember] = useState(false);
  
  const cookies = new Cookies(null, null, { path: "/" });

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();
  const onSubmit = async (data) => {
    const response = await API.login(data.email, data.password, remember);
    try {
      const res_json = await response.json();

      if (response.status === 200) {
        cookies.set('token', res_json.access_token, { path: '/' });
        cookies.set('role', res_json.role, { path: '/' });
      }    

      // navigate to the correct page based on the role
      // Implement the pages as appropriate

      if (res_json.role === 'agent') {
        navigate("/agent-navigation");
      }
      else if (res_json.role === 'program owner') {
        navigate("/program-owner-navigation");
      }
      else if (res_json.role === 'team lead') {
        navigate("/team-lead-navigation");
      }
      else if (res_json.role === 'admin') {
        navigate("/admin-navigation");
      }      

    } catch (error) {
      // add error handling here
    }

    
  };

  return (
    <div
      className="h-[1000px] w-full  flex items-center justify-center"
      style={{
        backgroundImage: `url(${second})`,
        backgroundRepeat: "no-repeat",
        backgroundSize: "cover",
        backgroundPosition: "center",
      }}
    >
      <div className="rounded-[38px] bg-white w-[780px] py-20 px-16 flex flex-col items-center justify-center gap-14">
        <div>
          <svg
            width={210}
            height={40}
            viewBox="0 0 210 40"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M204.02 39.0633C202.41 39.0633 201.099 38.7377 200.088 38.0867C199.077 37.4185 198.332 36.5704 197.852 35.5424C197.373 34.5144 197.133 33.4436 197.133 32.33V18.0925H193.483L194.049 12.8498H197.133V7.1959L203.506 6.52771V12.8498H209.16V18.0925H203.506V29.7086C203.506 31.0107 203.583 31.9531 203.737 32.5356C203.892 33.101 204.243 33.4608 204.791 33.615C205.339 33.752 206.213 33.8206 207.413 33.8206H209.16L208.595 39.0633H204.02Z"
              fill="#1414C9"
            />
            <path
              d="M178.676 38.5492V12.8497H184.639L184.793 15.5738C185.444 14.8542 186.36 14.1347 187.543 13.4151C188.725 12.6955 190.018 12.3357 191.423 12.3357C191.834 12.3357 192.211 12.37 192.554 12.4385L192.091 18.7092C191.714 18.6064 191.338 18.5378 190.961 18.5036C190.601 18.4693 190.241 18.4522 189.881 18.4522C188.802 18.4522 187.817 18.7006 186.926 19.1975C186.035 19.6943 185.41 20.3025 185.05 21.0221V38.5492H178.676Z"
              fill="#1414C9"
            />
            <path
              d="M158.628 39.0633C157.258 39.0633 156.007 38.7634 154.876 38.1638C153.745 37.547 152.846 36.6646 152.178 35.5167C151.509 34.3688 151.175 32.9811 151.175 31.3534C151.175 29.8971 151.509 28.655 152.178 27.627C152.863 26.5819 153.754 25.7167 154.85 25.0313C155.964 24.3289 157.163 23.7806 158.448 23.3866C159.75 22.9754 161.027 22.6756 162.277 22.4871C163.545 22.2986 164.659 22.1873 165.618 22.153C165.55 20.6796 165.173 19.6088 164.488 18.9406C163.802 18.2724 162.637 17.9383 160.992 17.9383C159.845 17.9383 158.722 18.1011 157.626 18.4266C156.546 18.735 155.321 19.2233 153.951 19.8914L153.385 14.7002C154.927 13.9463 156.469 13.3809 158.011 13.004C159.57 12.6271 161.147 12.4386 162.74 12.4386C164.659 12.4386 166.312 12.7813 167.7 13.4666C169.088 14.1519 170.159 15.257 170.912 16.7818C171.666 18.2895 172.043 20.2855 172.043 22.7698V29.7087C172.043 30.9936 172.103 31.9274 172.223 32.5099C172.343 33.0753 172.566 33.4351 172.891 33.5893C173.217 33.7435 173.688 33.8206 174.305 33.8206H175.127L174.562 39.0633H172.249C171.289 39.0633 170.433 38.9348 169.679 38.6778C168.942 38.4379 168.308 38.0952 167.777 37.6498C167.246 37.2043 166.818 36.6818 166.492 36.0821C165.653 37.0244 164.513 37.7612 163.074 38.2923C161.652 38.8063 160.17 39.0633 158.628 39.0633ZM161.301 34.1804C161.866 34.1804 162.569 34.0347 163.408 33.7435C164.248 33.4351 165.002 32.9639 165.67 32.33V26.4705C164.47 26.5219 163.271 26.7189 162.072 27.0616C160.873 27.4043 159.87 27.9097 159.065 28.5779C158.26 29.2461 157.857 30.0856 157.857 31.0964C157.857 32.1415 158.131 32.9211 158.68 33.4351C159.228 33.9319 160.102 34.1804 161.301 34.1804Z"
              fill="#1414C9"
            />
            <path
              d="M143.787 39.0633C142.176 39.0633 140.866 38.7377 139.855 38.0867C138.844 37.4185 138.099 36.5704 137.619 35.5424C137.139 34.5144 136.899 33.4436 136.899 32.33V18.0925H133.25L133.815 12.8498H136.899V7.1959L143.273 6.52771V12.8498H148.927V18.0925H143.273V29.7086C143.273 31.0107 143.35 31.9531 143.504 32.5356C143.658 33.101 144.01 33.4608 144.558 33.615C145.106 33.752 145.98 33.8206 147.179 33.8206H148.927L148.361 39.0633H143.787Z"
              fill="#1414C9"
            />
            <path
              d="M117.606 39.2688C116.15 39.2688 114.651 39.1232 113.109 38.8319C111.567 38.5578 110.136 38.2237 108.817 37.8296C107.498 37.4184 106.453 37.0244 105.682 36.6474L106.453 29.6572C107.652 30.2397 108.903 30.7794 110.205 31.2762C111.507 31.7731 112.843 32.1757 114.214 32.4841C115.585 32.7925 116.972 32.9467 118.377 32.9467C120.125 32.9467 121.53 32.6041 122.592 31.9187C123.654 31.2334 124.185 30.1883 124.185 28.7834C124.185 27.704 123.885 26.8388 123.286 26.1877C122.686 25.5196 121.77 24.9285 120.536 24.4145C119.302 23.8834 117.726 23.2837 115.807 22.6155C113.888 21.9473 112.166 21.1935 110.642 20.354C109.117 19.4973 107.909 18.4179 107.018 17.1158C106.127 15.8137 105.682 14.1518 105.682 12.1301C105.682 10.1427 106.17 8.37801 107.147 6.83604C108.123 5.27694 109.579 4.0605 111.515 3.18672C113.469 2.2958 115.893 1.85034 118.788 1.85034C120.981 1.85034 123.072 2.09877 125.059 2.59563C127.046 3.07535 128.743 3.59791 130.148 4.1633L129.479 10.8966C127.458 9.98851 125.556 9.30319 123.774 8.8406C122.009 8.36088 120.21 8.12102 118.377 8.12102C116.458 8.12102 114.976 8.43798 113.931 9.0719C112.886 9.70582 112.363 10.6567 112.363 11.9245C112.363 12.9354 112.655 13.7492 113.237 14.366C113.82 14.9828 114.651 15.5139 115.73 15.9594C116.81 16.3877 118.103 16.8417 119.611 17.3214C122.215 18.1438 124.399 19.0519 126.164 20.0456C127.946 21.0222 129.282 22.2129 130.173 23.6178C131.081 25.0056 131.535 26.7274 131.535 28.7834C131.535 29.8114 131.373 30.9336 131.047 32.15C130.722 33.3493 130.079 34.4887 129.12 35.5681C128.16 36.6474 126.755 37.5384 124.905 38.2408C123.072 38.9261 120.639 39.2688 117.606 39.2688Z"
              fill="#1414C9"
            />
            <path
              d="M81.1978 38.5492V0H87.5712V23.3865L95.5381 12.8497H102.734L93.3793 25.1855L102.94 38.5492H95.7437L87.5712 27.1387V38.5492H81.1978Z"
              fill="#228512"
            />
            <path
              d="M68.9014 38.5492V12.8497H75.2748V38.5492H68.9014ZM68.9014 8.94342V2.56995H75.2748V8.94342H68.9014Z"
              fill="#228512"
            />
            <path
              d="M51.1808 39.0632C48.508 39.0632 46.375 38.5321 44.7816 37.4698C43.1882 36.4076 42.0403 34.9513 41.3379 33.1009C40.6354 31.2334 40.2842 29.0918 40.2842 26.6761V12.8497H46.6577V26.6761C46.6577 29.0575 47.0517 30.8308 47.8398 31.9958C48.6451 33.1438 49.9472 33.7177 51.7461 33.7177C53.1853 33.7177 54.3761 33.375 55.3184 32.6897C56.2778 32.0044 57.0745 31.045 57.7084 29.8114L56.5777 33.0495V12.8497H62.9511V38.5492H56.9888L56.6804 34.0775L58.0682 35.8765C57.4514 36.6646 56.4749 37.3927 55.1385 38.0609C53.8192 38.7291 52.5 39.0632 51.1808 39.0632Z"
              fill="#228512"
            />
            <path
              d="M19.3711 27.6012L23.4316 23.2323L35.973 35.1569L31.9125 39.5258L19.3711 27.6012ZM18.2917 39.2688C14.8651 39.2688 11.8155 38.4978 9.14271 36.9558C6.46996 35.3967 4.37117 33.2208 2.84634 30.4282C1.3215 27.6184 0.559082 24.3288 0.559082 20.5596C0.559082 16.7903 1.3215 13.5093 2.84634 10.7167C4.37117 7.90685 6.46996 5.73096 9.14271 4.189C11.8155 2.62989 14.8651 1.85034 18.2917 1.85034C21.7183 1.85034 24.768 2.62989 27.4407 4.189C30.1135 5.73096 32.2123 7.90685 33.7371 10.7167C35.2619 13.5093 36.0244 16.7903 36.0244 20.5596C36.0244 24.3288 35.2619 27.6184 33.7371 30.4282C32.2123 33.2208 30.1135 35.3967 27.4407 36.9558C24.768 38.4978 21.7183 39.2688 18.2917 39.2688ZM18.2917 32.8953C20.6903 32.8953 22.6949 32.3642 24.3054 31.3019C25.9159 30.2397 27.1238 28.7834 27.929 26.933C28.7343 25.0655 29.1369 22.941 29.1369 20.5596C29.1369 18.1781 28.7343 16.0622 27.929 14.2118C27.1238 12.3443 25.9159 10.8794 24.3054 9.81718C22.6949 8.75494 20.6903 8.22381 18.2917 8.22381C15.8931 8.22381 13.8885 8.75494 12.278 9.81718C10.6675 10.8794 9.45967 12.3443 8.65442 14.2118C7.84917 16.0622 7.44654 18.1781 7.44654 20.5596C7.44654 22.941 7.84917 25.0655 8.65442 26.933C9.45967 28.7834 10.6675 30.2397 12.278 31.3019C13.8885 32.3642 15.8931 32.8953 18.2917 32.8953Z"
              fill="#228512"
            />
          </svg>
        </div>
        <form
          className="w-full flex flex-col items-center"
          onSubmit={handleSubmit(onSubmit)}
        >
          <div className="w-full mb-5">
            <p className="text-2xl text-[#222] mb-2">User</p>
            <label className="input input-bordered flex items-center gap-2 ">
              <input
                {...register("email", { required: true })}
                type="text"
                className="grow h-16 border border-[#cccccc] rounded pl-5 focus:outline-none"
                placeholder="agent@mail.com"
              />
            </label>
            {errors.email && (
              <span className="text-right text-red-500 text-xs">
                *This field is required
              </span>
            )}
          </div>
          <div className="w-full mb-8">
            <p className="text-2xl text-[#222] mb-2">Password</p>
            <label className="input input-bordered flex bg-transparent items-center gap-2 relative">
              <input
                type={showPassword ? "text" : "password"}
                className="grow h-16 border border-[#cccccc] rounded pl-5 focus:outline-none"
                placeholder="Password"
                {...register("password", { required: true })}
              />
              <svg
                className="absolute right-5 cursor-pointer"
                width={29}
                height={18}
                viewBox="0 0 29 18"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                onClick={() => {
                  setShowPassword(!showPassword);
                }}
              >
                <path
                  d="M18.6332 9.10754C18.6332 11.38 16.7103 13.2222 14.3383 13.2222C11.9664 13.2222 10.0435 11.38 10.0435 9.10754C10.0435 6.83504 11.9664 4.99286 14.3383 4.99286C16.7103 4.99284 18.6332 6.83507 18.6332 9.10754ZM14.3461 0.540161C11.8902 0.551055 9.34461 1.14893 6.93486 2.29359C5.14564 3.1785 3.40196 4.42698 1.88836 5.96797C1.14495 6.75459 0.196758 7.89361 0.043457 9.10888C0.0615737 10.1616 1.19077 11.4609 1.88836 12.2498C3.30773 13.7303 5.006 14.9439 6.93486 15.9251C9.18207 17.0157 11.6694 17.6436 14.3461 17.6785C16.8043 17.6675 19.3494 17.0627 21.7565 15.9251C23.5457 15.0402 25.2902 13.7908 26.8039 12.2498C27.5472 11.4632 28.4954 10.3242 28.6488 9.10888C28.6306 8.05618 27.5014 6.75678 26.8039 5.96792C25.3845 4.48745 23.6853 3.27476 21.7565 2.29355C19.5104 1.20378 17.0169 0.580185 14.3461 0.540161ZM14.3443 2.66763C18.0658 2.66763 21.0826 5.55186 21.0826 9.10981C21.0826 12.6677 18.0658 15.552 14.3443 15.552C10.6228 15.552 7.60596 12.6677 7.60596 9.10981C7.60596 5.55186 10.6228 2.66763 14.3443 2.66763Z"
                  fill="#999999"
                />
              </svg>
            </label>
            {errors.password && (
              <span className="text-right text-red-500 text-xs">
                *This field is required
              </span>
            )}
          </div>
          <div className="flex items-center justify-between w-full mb-14">
            <label className="cursor-pointer label flex items-center">
              <input
                type="checkbox"
                className="checkbox checked:bg-[#228512]  border-[2.6px] border-[#228512] rounded-sm w-5 h-5"
                // {...register("remember")}
                onChange={(e) => setRemember(e.target.checked)}
              />
              <span className="label-text ml-2">Remember me</span>
            </label>
            <span className="text-[#1E40AF] font-normal cursor-pointer">
              Forgot password?
            </span>
          </div>
          <button
            type="submit"
            className="bg-[#1E40AF] rounded-[60px] py-4 px-10 text-white font-bold text-xl max-w-40"
          >
            LOG IN
          </button>
        </form>
      </div>
    </div>
  );
};

export default Login;
